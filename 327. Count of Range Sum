class Solution:
    def countRangeSum(self, nums: List[int], lower: int, upper: int) -> int:
        def count(lo: int, hi: int) -> int:
            if lo == hi:
                return 0
            mid = (lo + hi) // 2
            count_left = count(lo, mid)
            count_right = count(mid + 1, hi)

            result = count_left + count_right
            i = j = mid + 1
            for left_sum in prefix_sum[lo:mid+1]:
                while i <= hi and prefix_sum[i] - left_sum < lower:
                    i += 1
                while j <= hi and prefix_sum[j] - left_sum <= upper:
                    j += 1
                result += j - i
            merged = sorted(prefix_sum[lo:hi+1])
            prefix_sum[lo:hi+1] = merged
            return result

        prefix_sum = [0] + list(itertools.accumulate(nums))
        return count(0, len(prefix_sum) - 1)
