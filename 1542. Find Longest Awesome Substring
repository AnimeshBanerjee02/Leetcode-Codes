class Solution:
    def longestAwesome(self, s: str) -> int:
        bitmask = 0
        bitmask_to_index = {0: -1}
        max_length = 0
        
        for i, digit in enumerate(s):
            digit_value = ord(digit) - ord('0')
            bitmask ^= 1 << digit_value
            
            if bitmask in bitmask_to_index:
                max_length = max(max_length, i - bitmask_to_index[bitmask])
            
            for j in range(10):
                odd_bitmask = bitmask ^ (1 << j)
                if odd_bitmask in bitmask_to_index:
                    max_length = max(max_length, i - bitmask_to_index[odd_bitmask])
            
            if bitmask not in bitmask_to_index:
                bitmask_to_index[bitmask] = i
                
        return max_length
