#TIME COMPLEXITY - O(logn)
#SPACE COMPLEXITY - O(1)
class Solution:
    def minimumSize(self, nums: List[int], maxOperations: int) -> int:
        low,high=1,max(nums)
        while low<high:
            mid=(low+high)>>1
            if sum([(i-1)//(mid) for i in nums])>maxOperations:
                low=mid+1
            else:
                high=mid
        return low
        
