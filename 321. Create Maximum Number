class Solution:
    def maxNumber(self, nums1: List[int], nums2: List[int], k: int) -> List[int]:
        def max_single(nums: List[int], length: int) -> List[int]:
            stack = []
            drop = len(nums) - length
            for num in nums:
                while drop > 0 and stack and stack[-1] < num:
                    stack.pop()
                    drop -= 1
                stack.append(num)
            return stack[:length]

        def merge(nums1: List[int], nums2: List[int]) -> List[int]:
            merged = []
            while nums1 or nums2:
                if nums1 > nums2:
                    merged.append(nums1.pop(0))
                else:
                    merged.append(nums2.pop(0))
            return merged

        max_num = []
        for i in range(max(0, k - len(nums2)), min(k, len(nums1)) + 1):
            max1 = max_single(nums1, i)
            max2 = max_single(nums2, k - i)
            cur_max = merge(max1, max2)
            max_num = max(max_num, cur_max)
        return max_num
