from itertools import product

MOVES = (
	(0, 1), (0, -1),
	(1, 0), (-1, 0)
)


class Solution:
	def findMaxFish(self, grid: list[list[int]]) -> int:
		m, n = len(grid), len(grid[0])

		def dfs(x: int, y: int) -> int:
			output = 0

			if 0 <= x < m and 0 <= y < n and grid[x][y] > 0:
				output += grid[x][y]

				grid[x][y] = 0

				output += sum(dfs(x + dx, y + dy) for dx, dy in MOVES)

			return output

		return max(dfs(i, j) for i, j in product(range(m), range(n)))
