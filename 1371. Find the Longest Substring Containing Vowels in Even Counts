class Solution:
    def findTheLongestSubstring(self, s: str) -> int:
        vowel_to_bit = {'a': 0, 'e': 1, 'i': 2, 'o': 3, 'u': 4}
        
        first_occurrence = {0: -1}  
        mask = 0  
        max_len = 0
        
        for i, ch in enumerate(s):
            if ch in vowel_to_bit:
                bit = vowel_to_bit[ch]
                mask ^= (1 << bit)
            
            if mask in first_occurrence:
                max_len = max(max_len, i - first_occurrence[mask])
            else:
                first_occurrence[mask] = i
        
        return max_len
