from typing import List
from collections import Counter

class Solution:
    def dividePlayers(self, skill: List[int]) -> int:
        n = len(skill)
        
        total_skill = sum(skill)
        
        if total_skill % (n // 2) != 0:
            return -1
        
        target_team_skill = total_skill // (n // 2)
        
        skill_count = Counter(skill)
        chemistry_sum = 0
        
        for skill_value in sorted(skill_count):
            while skill_count[skill_value] > 0:
                partner_skill = target_team_skill - skill_value
                
                if partner_skill < skill_value:
                    break  
                
                if skill_count[partner_skill] == 0:
                    return -1  
                
                if skill_value == partner_skill:
                    pairs = skill_count[skill_value] // 2
                    chemistry_sum += pairs * (skill_value * skill_value)
                    skill_count[skill_value] -= pairs * 2
                else:
                    pairs = min(skill_count[skill_value], skill_count[partner_skill])
                    chemistry_sum += pairs * (skill_value * partner_skill)
                    skill_count[skill_value] -= pairs
                    skill_count[partner_skill] -= pairs
        
        return chemistry_sum if all(count == 0 for count in skill_count.values()) else -1
