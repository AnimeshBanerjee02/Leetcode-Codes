import heapq

class Solution:
    def mincostToHireWorkers(self, quality, wage, k):
        # Calculate wage-to-quality ratio for each worker
        n = len(quality)
        workers = sorted([(wage[i] / quality[i], quality[i]) for i in range(n)])
        min_cost = float('inf')
        sum_quality = 0
        heap = []

        for ratio, qual in workers:
            sum_quality += qual
            heapq.heappush(heap, -qual)  # Using negative quality to implement max heap
            if len(heap) > k:
                sum_quality += heapq.heappop(heap)  # Remove the worker with maximum quality
            if len(heap) == k:
                min_cost = min(min_cost, sum_quality * ratio)

        return min_cost
